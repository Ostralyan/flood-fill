{"version":3,"sources":["index.js"],"names":["Square","props","_this","Object","_Users_lukexu_dev_flood_fill_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_lukexu_dev_flood_fill_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_lukexu_dev_flood_fill_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","_this2","divStyle","backgroundColor","color","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","style","onClick","React","Component","Board","_this3","colors","i","Math","random","toString","squares","getColor","visited","j","oldColor","newColor","slice","getNextFloodFillState","clearVisisted","setState","length","numberBetweenZeroAndFour","floor","_this4","floodFill","renderSquare","Game","_this5","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b8b11c5.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const divStyle = {\n      backgroundColor: this.props.color\n    }\n    return (\n      <button\n        className=\"square\"\n        style={divStyle}\n        onClick={() => this.props.onClick()}>\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.state.colors = [];\n    // refactor this when there are forms\n    for (let i = 0; i < 5; i++) {\n      this.state.colors[i] = '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\n    }\n    this.state.squares = [\n      [\n        {\n          color: this.getColor(),\n          visited: false,\n        },\n        {\n          color: this.getColor(),\n          visited: false,\n        },\n        {\n          color: this.getColor(),\n          visited: false,\n        },\n      ],\n      [\n        {\n          color: this.getColor(),\n          visited: false,\n        },\n        {\n          color: this.getColor(),\n          visited: false,\n        },\n        {\n          color: this.getColor(),\n          visited: false,\n        },\n      ],\n      [\n        {\n          color: this.getColor(),\n          visited: false,\n        },\n        {\n          color: this.getColor(),\n          visited: false,\n        },\n        {\n          color: this.getColor(),\n          visited: false,\n        },\n      ]\n    ]\n  }\n\n  floodFill(i, j) {\n    const oldColor = this.state.squares[i][j].color;\n    const newColor = this.getColor();\n    const squares = this.state.squares.slice();\n\n    this.getNextFloodFillState(squares, i, j, oldColor, newColor);\n    this.clearVisisted(squares);\n    this.setState({ squares: squares });\n  }\n\n  clearVisisted(squares) {\n    for (let i = 0; i < squares.length; i++) {\n      for (let j = 0; j < squares[i].length; j++) {\n        squares[i][j].visited = false;\n      }\n    }\n  }\n\n  getNextFloodFillState(squares, i, j, oldColor, newColor) {\n    // check out of bounds\n    if (i < 0 || i > 2) return;\n    if (j < 0 || j > 2) return;\n    // check if it's visited\n    if (squares[i][j].visited) return;\n    // Indicate node has been visited\n    squares[i][j].visited = true;\n    // check if it's same color\n    if (squares[i][j].color !== oldColor) return;\n    // set the current color to the new color and mark node as visited.\n    squares[i][j].color = newColor;\n    // recurse through up, down, left, right boxes.\n    this.getNextFloodFillState(squares, i + 1, j, oldColor, newColor);\n    this.getNextFloodFillState(squares, i - 1, j, oldColor, newColor);\n    this.getNextFloodFillState(squares, i, j + 1, oldColor, newColor);\n    this.getNextFloodFillState(squares, i, j - 1, oldColor, newColor);\n  }\n\n  getColor() {\n    const numberBetweenZeroAndFour = Math.floor((Math.random() * 5));\n    return this.state.colors[numberBetweenZeroAndFour];\n  }\n\n  renderSquare(i, j) {\n    return <Square\n      color={this.state.squares[i][j].color}\n      onClick={() => this.floodFill(i, j)}\n    />;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0, 0)}\n          {this.renderSquare(0, 1)}\n          {this.renderSquare(0, 2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(1, 0)}\n          {this.renderSquare(1, 1)}\n          {this.renderSquare(1, 2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(2, 0)}\n          {this.renderSquare(2, 1)}\n          {this.renderSquare(2, 2)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <p>\n          Instructions: Click on any square.\n        </p>\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}